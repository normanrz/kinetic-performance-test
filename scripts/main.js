(function() {
  var __slice = [].slice;

  define(["underscore", "jquery", "kinetic"], function(_, $, Kinetic) {
    return $(function() {
      var boxHeight, boxWidth, deferred, height, i, image, layer, stage, textSize, width;
      width = $("#content").width();
      height = 1000;
      boxWidth = 100;
      boxHeight = 50;
      textSize = 15;
      stage = new Kinetic.Stage({
        container: "content",
        width: width,
        height: height
      });
      layer = new Kinetic.Layer();
      return $.when.apply($, ((function() {
        var _fn, _i, _results;
        _fn = function(image, deferred) {
          return image.onload = function() {
            deferred.resolve(image);
          };
        };
        _results = [];
        for (i = _i = 1; _i <= 200; i = ++_i) {
          deferred = new $.Deferred();
          image = new Image();
          _fn(image, deferred);
          image.src = "http://placehold.it/" + boxWidth + "x" + i;
          _results.push(deferred.promise());
        }
        return _results;
      })())).done(function() {
        var group, i, image, images, rect, text, _i;
        images = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        for (i = _i = 0; _i < 1000; i = ++_i) {
          group = new Kinetic.Group({
            x: Math.floor(Math.random() * (width - boxWidth)),
            y: Math.floor(Math.random() * (height - boxHeight)),
            width: boxWidth,
            height: boxHeight + textSize * 1.5,
            draggable: true
          });
          group.on('mouseover', function() {
            $(document.body).css({
              cursor: 'pointer'
            });
          });
          group.on('mouseout', function() {
            $(document.body).css({
              cursor: 'default'
            });
          });
          rect = new Kinetic.Rect({
            x: 2,
            y: 2,
            width: boxWidth - 4,
            height: boxHeight - 4,
            fill: "hsl(" + (Math.floor(Math.random() * 256)) + ", 100%, 50%)",
            stroke: 'black',
            strokeWidth: 4
          });
          image = new Kinetic.Image({
            x: 10,
            y: 10,
            width: boxWidth - 20,
            height: boxHeight - 20,
            image: images[i % 200]
          });
          text = new Kinetic.Text({
            x: 0,
            y: 0.25 * textSize + boxHeight,
            width: boxWidth,
            text: 'Simple Text',
            fontSize: textSize,
            fontFamily: "Open Sans",
            fill: "green",
            align: "center"
          });
          group.add(rect);
          group.add(image);
          group.add(text);
          layer.add(group);
        }
        return stage.add(layer);
      });
    });
  });

}).call(this);

// Generated by CoffeeScript 1.5.0-pre
